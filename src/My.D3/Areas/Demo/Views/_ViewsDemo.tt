<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="$(SolutionDir)_commonfile\Sealee.T4Helper.dll" #>
<#@ import namespace="Sealee.T4Helper" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="$(ProjectDir)Framework/T4/IndexCshtml.t4" #>
<#@ include file="$(ProjectDir)Framework/T4/CreateCshtml.t4" #>
<#@ include file="$(ProjectDir)Framework/T4/EditCshtml.t4" #>
<#@ include file="$(ProjectDir)Framework/T4/DetailCshtml.t4" #> 
            
<# 
    // 配置config
    string solutionsPath = Host.ResolveAssemblyReference("$(SolutionDir)");
    MyConfig myConfig=StringUtil.GetConfig (solutionsPath+"_commonfile\\T4Helper.json");
    myConfig.IsOverrideFile=true;
    myConfig.TableName="Demo_";
    myConfig.NameSpace="My.D3.Areas.Admin.Controllers";
    myConfig.Version="Demo";
    List<DbTable> tableInfos=DbUtil.GetDbTables(myConfig.ConnectionString,myConfig.TableName).Where(x=>x.HasPrimaryKey==true).ToList();
    string curPath = Path.GetDirectoryName(Host.TemplateFile);
	 

    foreach(DbTable tableInfo in tableInfos)
    {
        string tableName=StringUtil.ToCase(tableInfo.TableName);
        string destPath = Path.Combine(curPath, tableName );
        string fileName = string.Format(@"{0}\{1}Index.cshtml", destPath,tableName);
        IndexCshtml template = new IndexCshtml(tableInfo,myConfig);
        template.Output.PreserveExistingFile =myConfig.IsOverrideFile;
        template.Output.Encoding = Encoding.UTF8;							
        template.RenderToFile(fileName);

         fileName = string.Format(@"{0}\{1}Create.cshtml", destPath,tableName);
        CreateCshtml template2 = new CreateCshtml(tableInfo,myConfig);
        template2.Output.PreserveExistingFile =myConfig.IsOverrideFile;
        template2.Output.Encoding = Encoding.UTF8;							
        template2.RenderToFile(fileName);

        fileName = string.Format(@"{0}\{1}Edit.cshtml", destPath,tableName);
        EditCshtml template3 = new EditCshtml(tableInfo,myConfig);
        template3.Output.PreserveExistingFile =myConfig.IsOverrideFile;
        template3.Output.Encoding = Encoding.UTF8;							
        template3.RenderToFile(fileName);

        fileName = string.Format(@"{0}\{1}Detail.cshtml", destPath,tableName);
        DetailCshtml template4 = new DetailCshtml(tableInfo,myConfig);
        template4.Output.PreserveExistingFile =myConfig.IsOverrideFile;
        template4.Output.Encoding = Encoding.UTF8;							
        template4.RenderToFile(fileName);

    }
#>